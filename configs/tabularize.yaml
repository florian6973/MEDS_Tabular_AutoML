# Raw data
MEDS_cohort_dir: ???
tabularized_data_dir: ${MEDS_cohort_dir}/tabularize
task_dir: ${tabularized_data_dir}/task
model_dir: ${MEDS_cohort_dir}/model/model_${now:%Y-%m-%d_%H-%M-%S}
cache_dir: ${tabularized_data_dir}/.cache

# Pre-processing
min_code_inclusion_frequency: 1
window_sizes:
  - "1d"
  - "7d"
  - "30d"
  - "365d"
  - "full"
codes: null
aggs:
  # - "static/present"
  # - "static/first"
  - "code/count"
  - "value/count"
  - "value/sum"
  - "value/sum_sqd"
  - "value/min"
  - "value/max"

dynamic_threshold: 0.01
numerical_value_threshold: 0.1

# Sharding
n_patients_per_sub_shard: null

# Misc
do_overwrite: False
do_update: True
seed: 1
tqdm: True
test: False

num_boost_round: 1000
early_stopping_rounds: 5
model:
  booster: gbtree
  device: cpu
  tree_method: hist
  objective: binary:logistic

iterator:
  keep_data_in_memory: False
  binarize_task: True

# Hydra settings for sweep
defaults:
  - override hydra/sweeper: optuna
  - override hydra/sweeper/sampler: tpe

hydra:
  verbose: False
  sweep:
    dir: ${model_dir}/.logs/
  run:
    dir: ${model_dir}/.logs/

  # Optuna Sweeper
  sweeper:
    sampler:
      seed: 1
    storage: null
    study_name: tabularize_study_${now:%Y-%m-%d_%H-%M-%S}
    direction: minimize
    n_trials: 10

    # Define search space for Optuna
    params:
      window_sizes:
        _target_: hydra.utils.call(${hydra.utils.cross_product},
          values=["1d", "7d", "30d", "365d", "full"]) # , max_options=5)
      iterator.keep_data_in_memory: choice([True], [False])
