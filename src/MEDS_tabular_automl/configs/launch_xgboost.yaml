defaults:
  - default
  - tabularization: default
  - override hydra/sweeper: optuna
  - override hydra/sweeper/sampler: tpe
  - _self_

task_name: task
# min code frequency used for modeling, can potentially sweep over different values.
modeling_min_code_freq: 10

# Task cached data dir
input_dir: ${MEDS_cohort_dir}/${task_name}/task_cache
# Directory with task labels
input_label_dir: ${MEDS_cohort_dir}/${task_name}/labels
# Where to output the model and cached data
output_dir: ${MEDS_cohort_dir}/model/model_${now:%Y-%m-%d_%H-%M-%S}
output_filepath: ${output_dir}/model_metadata.parquet
cache_dir: ${MEDS_cohort_dir}/.cache

# Model parameters
model_params:
  num_boost_round: 1000
  early_stopping_rounds: 5
  model:
    booster: gbtree
    device: cpu
    nthread: 1
    tree_method: hist
    objective: binary:logistic
  iterator:
    keep_data_in_memory: True
    binarize_task: True

# Sweep parameters for Optuna
hydra:
  # Optuna Sweeper
  sweeper:
    sampler:
      seed: ${seed}
    storage: null
    study_name: tabularize_study_${now:%Y-%m-%d_%H-%M-%S}
    direction: minimize
    n_trials: 10

    # Define search space for Optuna
    params:
      window_sizes: ${generate_permutations:${tabularization.window_sizes}}
      aggs: ${generate_permutations:${tabularization.aggs}}
      min_code_freq: tag(log,range(10,1_000_000))
      model_params:
        model:
          +num_boost_round: range(10, 1000)
          +max_depth: range(2, 16)
          +eta: tag(log,interval(.001,1))
          +lambda: tag(log,interval(.001,1))
          +alpha: tag(log,interval(.001,1))
          +subsample: interval(0.5,1)
          +min_child_weight: uniform(1e-2, 100)
name: launch_xgboost
